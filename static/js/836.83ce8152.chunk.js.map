{"version":3,"file":"static/js/836.83ce8152.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import \"./comicsList.scss\";\n\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(10);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgSize = { objectFit: \"cover\" };\n      return (\n        <li className=\"comics__item\" tabIndex={0} key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.name}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        onClick={() => {\n          onRequest(offset);\n          console.log(offset);\n        }}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <AppBanner />\n      <ComicsList />\n    </>\n  );\n};\n\nexport default ComicsPage;\n"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","tabIndex","Link","to","id","thumbnail","name","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","console","log","style","display","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}